1.ฐานนิยม

จงเขียนโปรแกรมเพื่อรับคะแนนสอบย่อย (คะแนนเต็ม 10 ไม่มีคะแนนติดลบ) ของนักเรียนจานวน 20 คน มาสรา้งเป็น list แล้วแสดงผลฐานนิยม (mode–จำนวนในรายการที่มีความถี่สูงที่สุด) ของ list ดังกล่าว

หมายเหตุ ให้แสดงข้อความแจ้งข้อความโต้ตอบหรือข้อผิดพลาดที่อาจเกิดขึ้นในกรณีต่างๆ ดังนี้

“Score is out of range.” เมื่อคะแนนไม่อยู่ในช่วง 0 – 10
กำหนดให้มีฟังก์ชัน find_mode(l) เพื่อแสดงผลฐานนิยมของ list l
ในกรณีที่มีจำนวนที่มีความถี่สูงสุดเท่ากันมากกว่า 1 จำนวน จำนวนเหล่านั้นทุกจำนวนเป็นฐานนิยม โดยให้แสดงผลลัพธ์จากน้อยไปหามาก บรรทัดละ 1 จำนวน
ตัวอย่าง Input/Output 1

Enter score: 10
Enter score: 8
Enter score: 4
Enter score: 4
Enter score: 11
Score is out of range.
Enter score: 4
Enter score: 0
Enter score: -1
Score is out of range.
Enter score: 4
Enter score: 4
Enter score: 4
Enter score: 4
Enter score: 4
Enter score: 4
Enter score: 4
Enter score: 4
Enter score: 4
Enter score: 4
Enter score: 4
Enter score: 4
Enter score: 4
Enter score: 4
-----
Original list:
[10, 8, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
Mode of scores:
4
ตัวอย่าง Input/Output 1

Enter score: 6
Enter score: 6
Enter score: 6
Enter score: 6
Enter score: 6
Enter score: 6
Enter score: 6
Enter score: 6
Enter score: 6
Enter score: 6
Enter score: 7
Enter score: 7
Enter score: 7
Enter score: 7
Enter score: 7
Enter score: 7
Enter score: 7
Enter score: 7
Enter score: 7
Enter score: 7
-----
Original list:
[6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7]
Mode of scores:
6
7

2.Histogram

จงเขียนโปรแกรมเพื่อรับคะแนนสอบย่อย (คะแนนเต็ม 10 ไม่มีคะแนนติดลบ) ของนักเรียนจานวน 20 คน มาสรา้งเป็น list แล้วแสดงผลคะแนนของนักเรียนทั้ง 20 คนในรูปแผนภาพฮิสโตแกรม เมื่อกำหนดให้สัญลักษณ์ดอกจัน 1 อัน หมายถึงนักเรียน 1 คนที่ได้คะแนนนั้นๆ

หมายเหตุ ให้แสดงข้อความแจ้งข้อความโต้ตอบหรือข้อผิดพลาดที่อาจเกิดขึ้นในกรณีต่างๆ ดังนี้

“Score is out of range.” เมื่อคะแนนไม่อยู่ในช่วง 0 – 10
ตัวอย่าง Input/Output 1

Enter score: 1
Enter score: 2
Enter score: 3
Enter score: 4
Enter score: 5
Enter score: 6
Enter score: 7
Enter score: 9
Enter score: 10
Enter score: 4
Enter score: 4
Enter score: 5
Enter score: 5
Enter score: 6
Enter score: 6
Enter score: 5
Enter score: 6
Enter score: 2
Enter score: 3
Enter score: 0
Original list:
[1, 2, 3, 4, 5, 6, 7, 9, 10, 4, 4, 5, 5, 6, 6, 5, 6, 2, 3, 0]
 0 *
 1 *
 2 **
 3 **
 4 ***
 5 ****
 6 ****
 7 *
 8 
 9 *
10 *

3.ค่าความแปรปรวน

จงเขียนโปรแกรมเพื่อรับคะแนนสอบวิชาภาษาไทยของนักเรียน (คะแนนเต็ม 100 ไม่มีคะแนนติดลบ) จนกระทั่งผู้ใช้ป้อนข้อมูล -1 จึงหยุด จากนั้นสร้าง list ของข้อมูล แล้วแสดงผลคะแนนมากที่สุด (maximum score) คะแนนน้อยที่สุด (minimum score) คะแนนเฉลี่ย (average score) และส่วนเบี่ยงเบนมาตรฐาน(standard deviation)


หมายเหตุ

ให้แสดงข้อความโต้ตอบหรือข้อผิดพลาดที่อาจเกิดขึ้นในกรณีต่างๆ ดังนี้ ** “Score is out of range.” เมื่อคะแนนไม่อยู่ในช่วง 0 – 100
กำหนดให้มีฟังก์ชัน find_sd(l) เพื่อส่งกลับส่วนเบี่ยงเบนมาตรฐานของ list l
ตัวอย่าง Input/Output

Enter score: 34.0
Enter score: 101
Score is out of range.
Enter score: 80.5
Enter score: 22.75
Enter score: 56.0
Enter score: 78.25
Enter score: 92.25
Enter score: 69.0
Enter score: 78.5
Enter score: 83.0
Enter score: 46.75
Enter score: -1
Maximum score is 92.25.
Minimum score is 22.75.
Average score is 64.10.
Standard deviation is 21.98.

4.ผลรวมสะสม

จงเขียนโปรแกรมเพื่อรับจำนวนเต็มใดๆ ที่มีค่าตั้งแต่ 1 ถึง 999 มาสร้างเป็น list (ใส่ 0 เพื่อหยุด) จากนั้นให้สร้างและแสดงผล list ใหม่ โดยที่สมาชิกลำดับที่ i ของ list ใหม่จะเป็นผลรวมสะสมของสมาชิก i+1 ตัวแรกของ list เดิม

หมายเหตุ

ให้แสดงข้อความโต้ตอบหรือข้อผิดพลาดที่อาจเกิดขึ้นในกรณีต่างๆดังนี้ ** “Score is out of range.” เมื่อคะแนนไม่อยู่ในช่วง 1 – 100
กำหนดให้มีฟังก์ชัน accum_sum(l) เพื่อสร้างและแสดงผลรวมสะสม list ใหม่จาก list l
ตัวอย่าง Input/Output 1

Enter a number (0 to end): 1
Enter a number (0 to end): 2
Enter a number (0 to end): 3
Enter a number (0 to end): 4
Enter a number (0 to end): 0
Original list:
[1, 2, 3, 4]
Accumulative Sum:
1
3
6
10
ตัวอย่าง Input/Output 2

Enter a number (0 to end): -1
Number is out of range.
Enter a number (0 to end): 5
Enter a number (0 to end): 10
Enter a number (0 to end): 2
Enter a number (0 to end): 3
Enter a number (0 to end): 4
Enter a number (0 to end): 0
Original list:
[5, 10, 2, 3, 4]
Accumulative Sum:
5
15
17
20
24

5.ลิสต์เรียงหรือไม่

จงเขียนโปรแกรมเพื่อรับจานวนเต็มใดๆ ที่มีค่าตั้งแต่ 0 ถึง 100 มาสร้างเป็น list โดยให้รับเข้ามาเรื่อยๆ จนผู้ใช้ใส่ -1 จึงหยุด จากนั้นให้ตรวจสอบลำดับของสมาชิกใน list และแสดงผลอย่างใดอย่างหนึ่งดังต่อไปนี้ คือ 1) สมาชิกใน list เรียงลำดับแบบ non-increasing order นั่นคือ สมาชิกมีค่าไม่เพิ่มขึ้นจากสมาชิกในลำดับก่อนหน้า 2) สมาชิกใน list เรียงลำดับแบบ non-decreasing order นั่นคือ สมาชิกมีค่าไม่ลดลงจากสมาชิกในลำดับก่อนหน้า 3) สมาชิกใน list เรียงลำดับแบบสุ่ม random order นั่นคือไม่มีลำดับ และ 4) สมาชิกใน list เป็นค่าเดียวกันหมด อย่างใดอย่างหนึ่ง

หมายเหตุ

กำหนดให้มีฟังก์ชัน check_order(l) เพื่อตรวจสอบการเรียงลำดับสมาชิกใน list l และแสดงผลรูปแบบลำดับที่พบ
ให้แสดงข้อความโต้ตอบหรือข้อผิดพลาดที่อาจเกิดขึ้นในกรณีต่างๆ ดังนี้
“Number is out of range.”เมื่อคะแนนไม่อยู่ในช่วง 0 – 100
ถ้าลิสต์ว่าง ให้พิมพ์คำว่า "The list is empty."
ถ้าลิสต์เป็นกรณีที่ 1 ให้แสดงคำว่า "The list is in non-increasing order."
ถ้าลิสต์เป็นกรณีที่ 2 ให้แสดงคำว่า "The list is in non-decreasing order."
ถ้าลิสต์เป็นกรณีที่ 3 ให้แสดงคำว่า "The list is in random order."
ถ้าลิสต์เป็นกรณีที่ 4 ให้แสดงคำว่า "The list is in non-increasing and non-decreasing order."
คำเตือน

list.copy() มีใน python เวอร์ชัน 3.3 ขึ้นไปเท่านั้น ใน elab ไม่มีคำสั่งนี้ ให้นิสิตก็อปปี้ลิสต์เอง
ตัวอย่าง Input/Output 1

Enter a number (-1 to end): 1
Enter a number (-1 to end): 1
Enter a number (-1 to end): 2
Enter a number (-1 to end): 3
Enter a number (-1 to end): -1
-----
Original list:
[1, 1, 2, 3]
The list is in non-decreasing order.
ตัวอย่าง Input/Output 2

Enter a number (-1 to end): 3
Enter a number (-1 to end): 2
Enter a number (-1 to end): 1
Enter a number (-1 to end): -1
-----
Original list:
[3, 2, 1]
The list is in non-increasing order.