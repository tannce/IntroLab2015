1.วงกลม

จงเขียนโปรแกรมเพื่อรับรัศมี (radius) r ในโปรแกรมหลัก สร้างและเรียกใช้ฟังก์ชันต่อไปนี้ เพื่อให้แสดงผลลัพธ์
1.1. circle(r) เพื่อคำนวณและส่งกลับพื้นที่ของวงกลมที่มีรัศมี r
1.2. circumference(r) เพื่อคำนวณและส่งกลับความยาวเส้นรอบวงของวงกลมที่มีรัศมี r
1.3. sphere(r) เพื่อคำนวณและส่งกลับปริมาตรทรงกลมที่มีรัศมี r

ตัวอย่าง Input/Output

Enter a radius: 3.5
Area of a circle with radius 3.50 is 38.48.
Circumference of a circle with radius 3.50 is 21.99.
Volume of sphere with radius 3.50 is 179.59.

2.หลักเลข

จงเขียนโปรแกรมเพื่อรับจำนวนเต็ม num ที่กำหนดให้มีค่าตั้งแต่ 0 และน้อยกว่า 10,000 สร้างฟังก์ชันเพื่อส่งกลับตัวเลข ของแต่ละหลักดังนี้

2.1. digit(num) เพื่อคืนค่าตัวเลขในหลักหน่วยของจำนวนเต็ม num 
2.2. tens(num) เพื่อคืนค่าตัวเลขในหลักสิบของจำนวนเต็ม num 
2.3. hundreds(num) เพื่อคืนค่าตัวเลขในหลักร้อยของจำนวนเต็ม num 
2.4. thousands(num) เพื่อคืนค่าตัวเลขในหลักพันของจำนวนเต็ม num

นอกจากนี้ให้สร้างฟังก์ชัน sum_digits(num) เพิ่มเติมเพื่อคืนค่าผลบวกของตัวเลขในแต่ละหลักของ num

ตัวอย่าง Input/Output

Enter a number (0 to 9999): 8143
Digit place is 3.
Tens place is 4.
Hundreds place is 1.
Thousands place is 8.
Sum of all digits is 16.

3.ดอกเบี้ย

จงเขียนโปรแกรมเพื่อรับค่าเงินต้น (principle) ในหน่วยบาท อัตราดอกเบี้ย (interest rate) ในหน่วยร้อยละต่อปี และระยะเวลากู้ยืม (time) ในหน่วยปี แล้วสร้างและเรียกใช้ฟัก์ชันเพื่อคำนวนหาจำนวนเงินรวมที่ต้องจ่ายเมื่อครบระยะเวลากู้ยืมใน 2 รูปแบบ ดังนี้

simple_interest(p, r, t) เพื่อคืนค่าเงินรวมของการคิดดอกเบี้ยเชิงเดียว จากสูตร
ดอกเบี้ย = เงินต้น x อัตราดอกเบี้ย x ระยะเวลากู้ยืม
compound_interest(p, r, t) เพื่อคืนค่าเงินรวมของการคิดดอกเบี้ยทบต้น จากสูตร
เงินรวม = เงินต้น x (1 +อัตราดอกเบี้ย) ระยะเวลากู้ยืม
ตัวอย่าง Input/Output

Enter principle: 25000
Enter interest rate: 3.25
Enter time: 6.5
Return money for simple interest calculation is 30281.25 Baht.
Return money for compound interest calculation is 30776.94 Baht.

4.ระยะเวลา

จงเขียนโปรแกรมเพื่อรับค่าเวลาเริ่มต้น (start time) และเวลาสิ้นสุด (finish time) ซึ่งกำหนดให้เวลาของวันเดียวกันเพื่อคำนวณหาระยะเวลาระหว่างเวลาทั้งสอง โดยกำหนดให้สร้างฟังก์ชันต่อไปนี้

read_hour() เพื่อคืนค่าชั่วโมงในระบบ 24 ชั่วโมง (นั่นคือ ค่าที่เป็นไปได้มีค่าตั้งแต่ 0 ถึง 23)
read_minute() เพื่อคืนค่านาที (ค่าที่เป็นไปได้มีค่าตั้งแต่ 0 ถึง 59)
read_second() เพื่อคืนค่าวินาที (ค่าที่เป็นไปได้มีค่าตั้งแต่ 0 ถึง 59)
to_seconds(h, m, s) เพื่อคืนค่าจำนวนวินาทีทั้งหมดของเวลา h ชั่วโมง m นาที และ s วินาที
time_elapsed(start, finish) เพื่อคืนค่าระยะเวลานับจากวินาทีที่ start ถึงวินาทีที่ finish
แนะนำ ถ้าเวลาเริ่มต้นและเวลาสิ้นสุดมีค่าเป็น 8:15:00 ถึง 13:20:00 ตามลำดับ ในการหาระยะเวลาระหว่างเวลาทั้งสอง เราสามารถทำได้โดยแปลงเวลาทั้งสองให้อยู่ในรูปของจำนวนวินาทีนับจากเวลา 00:00:00 แล้วหาผลต่างของค่าทั้งสอง

ตัวอย่าง Input/Output

Start time:
>> Enter hour: 8
>> Enter minute: 15
>> Enter second: 0
Finish time:
>> Enter hour: 13
>> Enter minute: 20
>> Enter second: 0
Elapsed time is 5 hours 5 minutes 0 seconds.

5.ทอนเงิน (ฟังก์ชัน)

ให้นิสิตเขียนฟังก์ชันชื่อ change ที่จะรีเทิร์นจำนวนธนบัตรที่แลกเงินได้ ไม่ว่าจะเป็นเงินจำนวนเท่าไหร่หรือธนบัตรมูลค่าเท่าใด เช่นจำนวนเงิน 45 บาทจะแลกธนบัตรใบละ 20 บาทได้ 2 ใบ (ไม่ต้องสนใจเศษเงินที่เหลือ) ในขณะที่จำนวนเงิน 120 บาทจะและธนบัตรใบละ 100 บาทได้ 1 ใบ

จากนั้นให้เติมโปรแกรมให้สมบูรณ์ โดยโปรแกรมจะรับจำนวนเงินเข้ามา และคำนวณว่าจะแลกเป็นธนบัตร 500, 100, 20, 5, และ 1 บาทได้กี่ใบ โดยกำหนดว่าจะแลกเงินเป็นธนบัตรที่มีค่ามากที่สุดก่อน และธนบัตรมีแลกได้ไม่จำกัดจำนวน โปรแกรมนี้ต้องใช้ฟังก์ชันที่นิสิตนิยาม

ตัวอย่าง

Enter total money: 1218
500: 2
100: 2
 20: 0
  5: 3
  1: 3

6.ตัวแปร Local / Global

ให้นิสิตสร้างฟังก์ชันชื่อ fx, fy, และ fz ให้ถูกต้อง โดยเมื่อรันโปรแกรมแล้วจะได้ผลตามกำหนด

ผลลัพธ์

x inside function is 3
x outside function is 1
y inside function is 5
y outside function is 5
z inside function is 1
z outside function is 7